diff --git a/node_modules/react-native-floating-action/src/FloatingAction.js b/node_modules/react-native-floating-action/src/FloatingAction.js
index ae811bc..ff4797e 100644
--- a/node_modules/react-native-floating-action/src/FloatingAction.js
+++ b/node_modules/react-native-floating-action/src/FloatingAction.js
@@ -85,14 +85,14 @@ class FloatingAction extends Component {
     if (prevProps.visible !== visible) {
       if (visible) {
         Animated.parallel([
-          Animated.spring(this.visibleAnimation, { toValue: 0 }),
-          Animated.spring(this.fadeAnimation, { toValue: 1 })
+          Animated.spring(this.visibleAnimation, { toValue: 0, useNativeDriver: true }),
+          Animated.spring(this.fadeAnimation, { toValue: 1, useNativeDriver: true })
         ]).start();
       }
       if (!visible) {
         Animated.parallel([
-          Animated.spring(this.visibleAnimation, { toValue: 1 }),
-          Animated.spring(this.fadeAnimation, { toValue: 0 })
+          Animated.spring(this.visibleAnimation, { toValue: 1, useNativeDriver: true }),
+          Animated.spring(this.fadeAnimation, { toValue: 0, useNativeDriver: true })
         ]).start();
       }
     }
@@ -134,12 +134,14 @@ class FloatingAction extends Component {
           actionsPaddingTopBottom +
           height -
           (isIphoneX() ? 40 : 0),
-        duration: 250
+        duration: 250, 
+        useNativeDriver: true
       }),
       Animated.spring(this.mainBottomAnimation, {
         bounciness: 0,
         toValue: this.distanceToVerticalEdge + height - (isIphoneX() ? 40 : 0),
-        duration: 250
+        duration: 250, 
+        useNativeDriver: true
       })
     ]).start();
   };
@@ -151,12 +153,14 @@ class FloatingAction extends Component {
       Animated.spring(this.actionsBottomAnimation, {
         bounciness: 0,
         toValue: buttonSize + this.distanceToVerticalEdge + actionsPaddingTopBottom,
-        duration: 250
+        duration: 250, 
+        useNativeDriver: true
       }),
       Animated.spring(this.mainBottomAnimation, {
         bounciness: 0,
         toValue: this.distanceToVerticalEdge,
-        duration: 250
+        duration: 250,
+        useNativeDriver: true
       })
     ]).start();
   };
@@ -211,8 +215,8 @@ class FloatingAction extends Component {
     const { animated, onClose } = this.props;
 
     if (animated) {
-      Animated.spring(this.animation, { toValue: 0 }).start();
-      Animated.spring(this.actionsAnimation, { toValue: 0 }).start();
+      Animated.spring(this.animation, { toValue: 0, useNativeDriver: true }).start();
+      Animated.spring(this.actionsAnimation, { toValue: 0, useNativeDriver: true }).start();
     }
     this.updateState(
       {
@@ -255,12 +259,12 @@ class FloatingAction extends Component {
     if (!active) {
       if (!floatingIcon) {
         if (animated) {
-          Animated.spring(this.animation, { toValue: 1 }).start();
+          Animated.spring(this.animation, { toValue: 1, useNativeDriver: true }).start();
         }
       }
 
       if (animated) {
-        Animated.spring(this.actionsAnimation, { toValue: 1 }).start();
+        Animated.spring(this.actionsAnimation, { toValue: 1, useNativeDriver: true }).start();
 
         // only execute it for the background to prevent extra calls
         LayoutAnimation.configureNext({
diff --git a/node_modules/react-native-floating-action/src/FloatingActionItem.js b/node_modules/react-native-floating-action/src/FloatingActionItem.js
index d169c51..e541372 100644
--- a/node_modules/react-native-floating-action/src/FloatingActionItem.js
+++ b/node_modules/react-native-floating-action/src/FloatingActionItem.js
@@ -15,7 +15,8 @@ class FloatingActionItem extends Component {
 
     if (prevProps.active !== active && animated) {
       Animated.spring(this.animation, {
-        toValue: active ? 1 : 0
+        toValue: active ? 1 : 0,
+        useNativeDriver: true,
       }).start();
     }
   }
